tabs2 <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
tabs3 <- full_join(state.table, tabs2, by = "state")
df <- left_join(df, tabs2, by = "state")
View(df)
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid)) %>%
arrange(desc(count))
tabs2 <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
tabs3 <- full_join(state.table, tabs2, by = "state")
View(tabs3)
plot(x = tabs3$literacy, y = tabs3$mean)
plot(x = tabs3$population_density, y = tabs3$mean)
plot(x = tabs3$urban_population_share, y = tabs3$mean)
plot(x = tabs3$population, y = tabs3$mean)
tabs3 <- tabs3  %>% filter( count > 20 )
plot(x = tabs3$population, y = tabs3$mean)
plot(x = tabs3$literacy, y = tabs3$mean)
plot(x = tabs3$population_density, y = tabs3$mean)
plot(x = tabs3$urban_population_share, y = tabs3$mean)
type.table
department.table
names(df)
state.table
plot( x = df$literacy, y = df$paid)
p <- ggplot(data= df, aes(x = literacy, y = paid))+
geom_point()
p
tabs$literacy <- as.numeric(tabs$literacy)
tabs$population_density <- as.numeric(tabs$population_density)
tabs$urban_population_share <- as.numeric(tabs$urban_population_share)
tabs2 <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
tabs3 <- full_join(state.table, tabs2, by = "state")
df <- left_join(df, tabs2, by = "state")
p <- ggplot(data= df, aes(x = literacy, y = paid))+
geom_point()
p
df <- left_join(df, tabs2, by = "state")
tabs2 <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
tabs3 <- full_join(state.table, tabs2, by = "state")
df <- left_join(df, tabs2, by = "state")
p <- ggplot(data= df, aes(x = literacy, y = paid))+
geom_point()
p
View(df)
### Load data
df <- read.csv("Assign2.csv", header = TRUE, sep = ";")
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
#Correct classes of columns
df$town <- str_trim(df$town)
df$title <- str_trim(df$title)
df$date <- as.Date(df$date)
df$views <- as.numeric(df$views)
df$paid <- as.numeric(df$paid)
df$state <- str_trim(df$state)
#Remove NAs and Currency
df <- df %>%
select(-c(currency, title)) %>%
filter(!is.na(paid)) %>%
df <- df %>% filter(!is.na(state) & state!="")
rm(df)
### Load data
df <- read.csv("Assign2.csv", header = TRUE, sep = ";")
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
#Correct classes of columns
df$town <- str_trim(df$town)
df$title <- str_trim(df$title)
df$date <- as.Date(df$date)
df$views <- as.numeric(df$views)
df$paid <- as.numeric(df$paid)
df$state <- str_trim(df$state)
#Remove NAs and Currency
df <- df %>%
select(-c(currency, title)) %>%
filter(!is.na(paid)) %>%
df <- df %>% filter(!is.na(state) & state!="")
df <- read.csv("Assign2.csv", header = TRUE, sep = ";")
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
df$town <- str_trim(df$town)
df$title <- str_trim(df$title)
df$date <- as.Date(df$date)
df$views <- as.numeric(df$views)
df$paid <- as.numeric(df$paid)
df$state <- str_trim(df$state)
df <- df %>%
select(-c(currency, title)) %>%
filter(!is.na(paid))
df <- df %>% filter(!is.na(state) & state!="")
type.table <- df %>%
group_by(type) %>%
summarise(count = n(), mean = mean(paid)) %>%
arrange(desc(count))
#Group by department
department.table <- df %>%
group_by(department) %>%
summarise(count = n(), mean = mean(paid)) %>%
arrange(desc(count))
#Group by state
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid)) %>%
arrange(desc(count))
tabs2 <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
tabs3 <- full_join(state.table, tabs2, by = "state")
df <- left_join(df, tabs2, by = "state")
p <- ggplot(data= df, aes(x = literacy, y = paid))+
geom_point()
p
View(tabs)
url <- "https://en.wikipedia.org/wiki/States_and_union_territories_of_India"
tabs <- GET(url, encoding = "UTF-8")
tabs <- readHTMLTable(rawToChar(tabs$content), stringsAsFactors = F, header = TRUE)
tabs <- ldply(tabs[1:3])
tabs <- tabs[12:40,]
tabs <- tabs[,-c(1:5)]
#remove wikilinks
names(tabs) <- c("state", "code", "formation_date", "population", "area", "langugages", "capital",
"largest_city_if_not_capital", "population_density", "literacy", "urban_population_share")
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\[.*\\]", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\%", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "N\\/A", replacement =  NA, x = y)))
# tabs$state <- gsub(x = tabs$state, pattern = "Delhi", ) #Match data from Punjab( wiki ) into Delhi (df)
tabs$state <- gsub(x = tabs$state, pattern = "Odisha", replacement = "Orissa")
tabs$literacy <- as.numeric(tabs$literacy)
View(tabs)
url <- "https://en.wikipedia.org/wiki/States_and_union_territories_of_India"
tabs <- GET(url, encoding = "UTF-8")
tabs <- readHTMLTable(rawToChar(tabs$content), stringsAsFactors = F, header = TRUE)
tabs <- ldply(tabs[1:3])
tabs <- tabs[12:40,]
tabs <- tabs[,-c(1:5)]
#remove wikilinks
names(tabs) <- c("state", "code", "formation_date", "population", "area", "langugages", "capital",
"largest_city_if_not_capital", "population_density", "literacy", "urban_population_share")
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\[.*\\]", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\%", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "N\\/A", replacement =  NA, x = y)))
# tabs$state <- gsub(x = tabs$state, pattern = "Delhi", ) #Match data from Punjab( wiki ) into Delhi (df)
tabs$state <- gsub(x = tabs$state, pattern = "Odisha", replacement = "Orissa")
check <- as.numeric(tabs$literacy)
head(check)
check <- as.numeric(tabs$literacy, dec = ".")
head(check)
check <- as.numeric(tabs$literacy, dec = ",")
head(check)
check <- as.numeric(tabs$literacy, dec = ";")
head(check)
url <- "https://en.wikipedia.org/wiki/States_and_union_territories_of_India"
tabs <- GET(url, encoding = "UTF-8")
tabs <- readHTMLTable(rawToChar(tabs$content), stringsAsFactors = F, header = TRUE)
tabs <- ldply(tabs[1:3])
tabs <- tabs[12:40,]
tabs <- tabs[,-c(1:5)]
#remove wikilinks
names(tabs) <- c("state", "code", "formation_date", "population", "area", "langugages", "capital",
"largest_city_if_not_capital", "population_density", "literacy", "urban_population_share")
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\[.*\\]", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\%", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "N\\/A", replacement =  NA, x = y)))
# tabs$state <- gsub(x = tabs$state, pattern = "Delhi", ) #Match data from Punjab( wiki ) into Delhi (df)
tabs$state <- gsub(x = tabs$state, pattern = "Odisha", replacement = "Orissa")
check <- as.numeric(as.character(tabs$literacy))
head(check)
url <- "https://en.wikipedia.org/wiki/States_and_union_territories_of_India"
tabs <- GET(url, encoding = "UTF-8")
tabs <- readHTMLTable(rawToChar(tabs$content), stringsAsFactors = F, header = TRUE)
tabs <- ldply(tabs[1:3])
tabs <- tabs[12:40,]
tabs <- tabs[,-c(1:5)]
#remove wikilinks
names(tabs) <- c("state", "code", "formation_date", "population", "area", "langugages", "capital",
"largest_city_if_not_capital", "population_density", "literacy", "urban_population_share")
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\[.*\\]", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\%", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "N\\/A", replacement =  NA, x = y)))
# tabs$state <- gsub(x = tabs$state, pattern = "Delhi", ) #Match data from Punjab( wiki ) into Delhi (df)
tabs$state <- gsub(x = tabs$state, pattern = "Odisha", replacement = "Orissa")
tabs$literacy <- as.numeric(as.character(tabs$literacy))
tabs$population_density <- as.numeric(as.character(tabs$population_density))
tabs$urban_population_share <- as.numeric(as.character(tabs$urban_population_share))
View(tabs)
tabs2 <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
tabs3 <- full_join(state.table, tabs2, by = "state")
df <- left_join(df, tabs2, by = "state")
p <- ggplot(data= df, aes(x = literacy, y = paid))+
geom_point()
p
df <- read.csv("Assign2.csv", header = TRUE, sep = ";")
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
#Correct classes of columns
df$town <- str_trim(df$town)
df$title <- str_trim(df$title)
df$date <- as.Date(df$date)
df$views <- as.numeric(df$views)
df$paid <- as.numeric(df$paid)
df$state <- str_trim(df$state)
#Remove NAs and Currency
df <- df %>%
select(-c(currency, title)) %>%
filter(!is.na(paid))
df <- df %>% filter(!is.na(state) & state!="")
df <- left_join(df, tabs2, by = "state")
p <- ggplot(data= df, aes(x = literacy, y = paid))+
geom_point()
p
p <- ggplot(data= df, aes(x = population_density, y = paid))+
geom_point()
p
p <- ggplot(data= df, aes(x = urban_population_share, y = paid))+
geom_point()
p
dm <- read.csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv")
View(dm)
dm <- read.csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv", sep = ";")
View_(dm)
View(dm)
dm <- read_csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv", sep = ";")
library(readr)
dm <- read_csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv")
head(dm)
dm <- read.csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv", sep = ";")
View(dm)
VIEW(DM)
View(dm)
dm <- read.csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv", sep = ";")
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
df <- read.csv(file = "https://raw.githubusercontent.com/oskarharmsen/Assignment-2/master/assign2.csv", sep = ";")
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
rm(dm)
names(df) <- c("date", "type", "town", "state", "views", "department", "currency", "paid", "title")
#Correct classes of columns
df$town <- str_trim(df$town)
df$title <- str_trim(df$title)
df$date <- as.Date(df$date)
df$views <- as.numeric(df$views)
df$paid <- as.numeric(df$paid)
df$state <- str_trim(df$state)
#Remove NAs and Currency
df <- df %>%
select(-c(currency, title)) %>%
filter(!is.na(paid))
df <- df %>% filter(!is.na(state) & state!="")
agg <- df %>%
filter(paid != "NA", state != " ", type == "Birth Certificate") %>%
group_by(state) %>%
summarise( count = n(), meapaid = mean(paid)) %>%
arrange(-count)
p <- ggplot(agg, aes( x = reorder(state, -count), y = count))
p <- p + geom_bar(stat = "identity", fill = "darkred") + coord_flip()
p <- p + labs( x = "Name of state", y = "# of reports", title = "Birth Certificate")
p
url <- "https://en.wikipedia.org/wiki/States_and_union_territories_of_India"
tabs <- GET(url, encoding = "UTF-8")
tabs <- readHTMLTable(rawToChar(tabs$content), stringsAsFactors = F, header = TRUE)
tabs <- ldply(tabs[1:3])
tabs <- tabs[12:40,]
tabs <- tabs[,-c(1:5)]
#remove wikilinks
names(tabs) <- c("state", "code", "formation_date", "population", "area", "langugages", "capital",
"largest_city_if_not_capital", "population_density", "literacy", "urban_population_share")
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\[.*\\]", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "\\%", replacement =  "", x = y)))
tabs <- as.data.frame(lapply(tabs, function(y) gsub(pattern = "N\\/A", replacement =  NA, x = y)))
tabs$state <- gsub(x = tabs$state, pattern = "Odisha", replacement = "Orissa")
tabs$literacy <- as.numeric(as.character(tabs$literacy))
tabs$population_density <- as.numeric(as.character(tabs$population_density))
tabs$urban_population_share <- as.numeric(as.character(tabs$urban_population_share))
tabs <- tabs %>% select(state, population, literacy, population_density, urban_population_share)
df <- left_join(df, tabs, by = "state")
View(df)
p <- ggplot(data= df, aes(x = urban_population_share, y = paid))+
geom_point()
p
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid)) %>%
arrange(desc(count))
state.table
View(df)
names(df)
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid), median = median(paid), urban_population_share = urban_population_share, literacy = literacy, population_density = population_density) %>%
arrange(desc(count))
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid), median = median(paid),
urban_population_share = urban_population_share, literacy = literacy,
population_density = population_density)
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid), median = median(paid),
urban_population_share = mean(urban_population_share), literacy = mean(literacy),
population_density = mean(population_density))
arrange(desc(count))
state.table <- df %>%
group_by(state) %>%
summarise(count = n(), mean = mean(paid), median = median(paid)) %>%
#                     urban_population_share = mean(urban_population_share), literacy = mean(literacy),
#                     population_density = mean(population_density))
arrange(desc(count))
head(state.table)
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean = mean(paid),
median = median(paid)) %>%
#                     urban_population_share = mean(urban_population_share), literacy = mean(literacy),
#                     population_density = mean(population_density))
arrange(desc(count))
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean = mean(paid),
median = median(paid),
urban_population_share = mean(urban_population_share) %>%
#             , literacy = mean(literacy),
#                     population_density = mean(population_density))
arrange(desc(count))
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean = mean(paid),
median = median(paid),
urban_population_share = mean(urban_population_share))
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean = mean(paid),
median = median(paid),
urban_population_share = mean(urban_population_share)) %>%
#             , literacy = mean(literacy),
#                     population_density = mean(population_density))
arrange(desc(count))
names8df
names(df)
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean = mean(paid),
median = median(paid),
urban_population_share = mean(urban_population_share),
literacy = mean(literacy),
population_density = mean(population_density)
) %>%
arrange(desc(count))
head(state.table)
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean_paid = mean(paid),
median_paid = median(paid),
urban_population_share = mean(urban_population_share),
literacy = mean(literacy),
population_density = mean(population_density)
) %>%
arrange(desc(count))
p <-  ggplot(x = state.table, aes(x = urban_population_share, y = median_paid)) +
geom_point()
p
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean_paid = mean(paid),
median_paid = median(paid),
urban_population_share = mean(urban_population_share),
literacy = mean(literacy),
population_density = mean(population_density)
) %>%
arrange(desc(count))
p <-  ggplot(data = state.table, aes(x = urban_population_share, y = median_paid)) +
geom_point()
p
p <-  ggplot(data = state.table, aes(x = urban_population_share, y = median_paid)) +
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = urban_population_share, y = mean_paid)) +
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = literacy, y = median_paid)) +
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = literacy, y = mean_paid)) +
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = population_density, y = mean_paid)) +
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = population_density, y = mean_paid)) +
stat_smooth(method = "lm")
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = population_density, y = mean_paid)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = urban_population_share, y = mean_paid)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = literacy, y = mean_paid)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
fit1 <- lm(literacy ~ mean_paid, data = state.table)
summary(fit1)
fit1 <- lm(mean_paid ~ literacy, data = state.table)
summary(fit1)
fit1 <- lm(mean_paid ~ literacy, data = state.table)
summary(fit1)
fit1 <- lm(literacy ~ mean_paid, data = state.table)
summary(fit1)
fit1 <- lm(mean_paid ~ literacy, data = state.table)
summary(fit1)
summary(fit1)
multiplot()
??multiplot
p <-  ggplot(data = state.table, aes(x = literacy, y = mean_paid)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean_bribe = mean(paid),
median_bribe = median(paid),
urban_population_share = mean(urban_population_share),
literacy = mean(literacy),
population_density = mean(population_density)
) %>%
arrange(desc(count))
p <-  ggplot(data = state.table, aes(x = literacy, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
state.table <- df %>%
group_by(state) %>%
summarise(
count = n(),
mean_bribe = mean(paid),
median_bribe = median(paid),
urban_population_share = mean(urban_population_share),
literacy_percent = mean(literacy),
population_density_per_sqkm = mean(population_density)
) %>%
arrange(desc(count))
p <-  ggplot(data = state.table, aes(x = literacy, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
p <-  ggplot(data = state.table, aes(x = literacy_percent, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
p
plot.literacy <-  ggplot(data = state.table, aes(x = literacy_percent, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
plot.urban <-  ggplot(data = state.table, aes(x = urban_population_share, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
plot.density <-  ggplot(data = state.table, aes(x = population_density, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
multiplot(plot.urban, plot.literacy, plot.density)
install.packages("multiplot")
library(gridExtra)
library(grid)
grid.arrange(plot.urban, plot.literacy, plot.density, ncol=3)
grid.arrange(plot.urban, plot.literacy, plot.density, ncol=3, main = "Make it work")
fit1 <- lm(mean_paid ~ literacy, data = state.table)
summary(fit1)
plot.literacy <-  ggplot(data = state.table, aes(x = literacy_percent, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
plot.urban <-  ggplot(data = state.table, aes(x = urban_population_share, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
plot.density <-  ggplot(data = state.table, aes(x = population_density, y = mean_bribe)) +
stat_smooth(method = "lm")+
geom_point() +
theme_minimal()
grid.arrange(plot.urban, plot.literacy, plot.density, ncol=3, main = "Make it work")
library(gridExtra)
library(gridExtra)
grid.arrange(plot.urban, plot.literacy, plot.density, ncol=3, main = "Make it work")
grid.arrange(plot.urban, plot.literacy, ncol=2, main = "Make it work")
